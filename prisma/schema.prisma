generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model acessos_usuarios {
  cd_usuario   Int?
  gerencia     String? @default("N") @db.VarChar(1)
  clientes     String? @default("N") @db.VarChar(1)
  financeiro   String? @default("N") @db.VarChar(1)
  tela_exemplo String? @default("N") @db.VarChar(1)

  @@index([cd_usuario], map: "acessos_usuarios_usuarios_cd_usuario_fk")
  @@ignore
}

model agenda {
  cd_agenda     Int            @id @default(autoincrement())
  horario       DateTime       @db.DateTime(0)
  cd_cliente    Int?
  status_agenda String         @default("A") @db.VarChar(1)
  clientes      clientes?      @relation(fields: [cd_cliente], references: [cd_cliente], onDelete: NoAction, onUpdate: NoAction, map: "agenda_clientes_cd_cliente_fk")
  atendimentos  atendimentos[]

  @@index([cd_cliente], map: "agenda_clientes_cd_cliente_fk")
  @@index([horario], map: "idx_horario")
}

model atendimentos {
  nr_sequencia   Int          @id @default(autoincrement())
  horario        DateTime     @db.DateTime(0)
  status_servico String       @default("A") @db.VarChar(1)
  cd_agenda      Int
  cd_cliente     Int
  tempo_servico  String?      @db.VarChar(30)
  dh_inicio      DateTime     @default(now()) @db.DateTime(0)
  dh_fim         DateTime?    @db.DateTime(0)
  cd_usuario     Int?
  agenda         agenda       @relation(fields: [cd_agenda], references: [cd_agenda], onDelete: NoAction, onUpdate: NoAction, map: "atendimentos_agenda_cd_agenda_fk")
  clientes       clientes     @relation(fields: [cd_cliente], references: [cd_cliente], onDelete: NoAction, onUpdate: NoAction, map: "atendimentos_clientes_cd_cliente_fk")
  usuarios       usuarios?    @relation(fields: [cd_usuario], references: [cd_usuario], onDelete: NoAction, onUpdate: NoAction, map: "servicos_agendados_FK")
  financeiro     financeiro[]

  @@index([cd_usuario], map: "servicos_agendados_FK")
  @@index([cd_agenda], map: "servicos_agendados_agenda_cd_agenda_fk")
  @@index([horario], map: "servicos_agendados_agenda_horario_fk")
  @@index([cd_cliente], map: "servicos_agendados_clientes_cd_cliente_fk")
}

model clientes {
  cd_cliente        Int                 @id @default(autoincrement())
  nm_cliente        String              @db.VarChar(200)
  cpf_cnpj          String?             @unique(map: "clientes_UN") @db.VarChar(14)
  dt_cadastro       DateTime            @default(now()) @db.DateTime(0)
  dt_update         DateTime            @default(now()) @db.DateTime(0)
  cep               String?             @default("0") @db.VarChar(8)
  bairro            String?             @db.VarChar(60)
  nr_casa           String?             @db.VarChar(20)
  cd_usuario        Int?
  status            String              @default("A")
  agenda            agenda[]
  atendimentos      atendimentos[]
  usuarios          usuarios?           @relation(fields: [cd_usuario], references: [cd_usuario], onDelete: NoAction, onUpdate: NoAction, map: "clientes_FK")
  financeiro        financeiro[]
  veiculos_clientes veiculos_clientes[]

  @@index([cd_usuario], map: "clientes_FK")
}

model descricao_all {
  nr_sequencia Int     @id @default(autoincrement())
  descricao    String  @db.VarChar(50)
  nome_tabela  String  @db.VarChar(50)
  cd_origem    String? @db.VarChar(1)
}

model financeiro {
  nr_sequencia       Int               @id @default(autoincrement())
  cd_cliente         Int
  cd_nf              Int?
  dh_hr_mov          DateTime          @default(now()) @db.DateTime(0)
  dh_hr_baixa        DateTime?         @db.DateTime(0)
  vlr_movimento      Float             @default(0) @db.Float
  vlr_desconto       Float             @default(0) @db.Float
  perc_desconto      Float             @default(0) @db.Float
  vlr_total          Float             @default(0) @db.Float
  dh_vencimento      DateTime?         @db.DateTime(0)
  vlr_baixa          Int?
  vlr_juros          Int?              @default(0)
  cd_tipo_pagamento  Int?
  cd_usuario         Int
  cd_agenda          Int?
  nr_seq_atendimento Int
  cd_tipo_movimento  Int?
  quantidade         Float             @default(0) @db.Float
  clientes           clientes          @relation(fields: [cd_cliente], references: [cd_cliente], onDelete: NoAction, onUpdate: NoAction, map: "financeiro_clientes_cd_cliente_fk")
  atendimentos       atendimentos      @relation(fields: [nr_seq_atendimento], references: [nr_sequencia], onDelete: NoAction, onUpdate: NoAction, map: "financeiro_servicos_agendados_nr_sequencia_fk")
  tipo_movimento     tipo_movimento?   @relation(fields: [cd_tipo_movimento], references: [cd_movimento], onDelete: NoAction, onUpdate: NoAction, map: "financeiro_tipo_movimento_cd_movimento_fk")
  tipos_pagamentos   tipos_pagamentos? @relation(fields: [cd_tipo_pagamento], references: [cd_pagamento], onDelete: NoAction, onUpdate: NoAction, map: "financeiro_tipos_pagamentos_cd_pagamento_fk")
  usuarios           usuarios          @relation(fields: [cd_usuario], references: [cd_usuario], onDelete: NoAction, onUpdate: NoAction, map: "financeiro_usuarios_cd_usuario_fk")

  @@index([cd_cliente], map: "financeiro_clientes_cd_cliente_fk")
  @@index([cd_agenda], map: "financeiro_servicos_agendados_cd_agenda_fk")
  @@index([nr_seq_atendimento], map: "financeiro_servicos_agendados_nr_sequencia_fk")
  @@index([cd_tipo_movimento], map: "financeiro_tipo_movimento_cd_movimento_fk")
  @@index([cd_tipo_pagamento], map: "financeiro_tipos_pagamentos_cd_pagamento_fk")
  @@index([cd_usuario], map: "financeiro_usuarios_cd_usuario_fk")
}

model servicos {
  cd_servico           Int                    @id @default(autoincrement())
  desc_servico         String                 @db.VarChar(40)
  vlr_servico          Float                  @db.Float
  servicos_atendimento servicos_atendimento[]
}

model servicos_atendimento {
  nr_sequencia       Int               @id @default(autoincrement())
  nr_seq_atendimento Int
  cd_servico         Int
  cd_veiculo         Int
  placa              String            @db.VarChar(10)
  dh_inicio          DateTime          @default(now()) @db.DateTime(0)
  dh_fim             DateTime?         @db.DateTime(0)
  tempo_servico      DateTime?         @db.Time(0)
  cd_usuario         Int?
  status             String            @default("A") @db.VarChar(1)
  servicos           servicos          @relation(fields: [cd_servico], references: [cd_servico], onDelete: NoAction, onUpdate: NoAction, map: "servicos_atendimento_servicos_cd_servico_fk")
  usuarios           usuarios?         @relation(fields: [cd_usuario], references: [cd_usuario], onDelete: NoAction, onUpdate: NoAction, map: "servicos_atendimento_usuarios_cd_usuario_fk")
  veiculos_clientes  veiculos_clientes @relation(fields: [cd_veiculo], references: [cd_veiculo], onDelete: NoAction, onUpdate: NoAction, map: "servicos_atendimento_veiculos_clientes_cd_veiculo_fk")

  @@index([cd_servico], map: "servicos_atendimento_servicos_cd_servico_fka")
  @@index([cd_usuario], map: "servicos_atendimento_usuarios_cd_usuario_fk")
  @@index([cd_veiculo], map: "servicos_atendimento_veiculos_clientes_cd_veiculo_fk")
}

model tipo_movimento {
  cd_movimento     Int                @id @default(autoincrement())
  descricao        String             @db.VarChar(30)
  financeiro       financeiro[]
  tipos_pagamentos tipos_pagamentos[]
}

model tipo_veiculos {
  cd_tipo_veiculo   Int                 @id @default(autoincrement())
  descricao         String              @db.VarChar(100)
  veiculos_clientes veiculos_clientes[]
}

model tipos_pagamentos {
  cd_pagamento      Int            @id @default(autoincrement())
  descricao         String         @db.VarChar(50)
  qtd_parcelas      Int            @default(1)
  cd_tipo_movimento Int
  financeiro        financeiro[]
  tipo_movimento    tipo_movimento @relation(fields: [cd_tipo_movimento], references: [cd_movimento], onDelete: NoAction, onUpdate: NoAction, map: "tipos_pagamentos_tipo_movimento_cd_movimento_fk")

  @@index([cd_tipo_movimento], map: "tipos_pagamentos_tipo_movimento_cd_movimento_fk")
}

model usuarios {
  cd_usuario           Int                    @id @default(autoincrement())
  nm_usuario           String                 @unique(map: "usuarios_pk") @db.VarChar(50)
  dt_cadastro          DateTime               @default(now()) @db.DateTime(0)
  dt_update            DateTime               @default(now()) @db.DateTime(0)
  senha                String                 @db.VarChar(500)
  email                String                 @unique(map: "email") @db.VarChar(60)
  status               String                 @default("A") @db.VarChar(1)
  atendimentos         atendimentos[]
  clientes             clientes[]
  financeiro           financeiro[]
  servicos_atendimento servicos_atendimento[]
}

model veiculos_clientes {
  cd_veiculo           Int                    @id @default(autoincrement())
  cd_cliente           Int
  placa                String                 @unique @db.VarChar(10)
  cd_tipo_veiculo      Int?
  modelo               String                 @db.VarChar(50)
  servicos_atendimento servicos_atendimento[]
  clientes             clientes               @relation(fields: [cd_cliente], references: [cd_cliente], onDelete: Cascade, map: "veiculos_clientes_FK")
  tipo_veiculos        tipo_veiculos?         @relation(fields: [cd_tipo_veiculo], references: [cd_tipo_veiculo], onDelete: NoAction, onUpdate: NoAction, map: "veiculos_clientes_FK_1")

  @@index([cd_cliente], map: "veiculos_clientes_FK")
  @@index([cd_tipo_veiculo], map: "veiculos_clientes_FK_1")
  @@index([cd_veiculo, cd_cliente], map: "veiculos_clientes_pk")
}
